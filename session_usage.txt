./admin_auth.py:282:            session['logged_in'] = True
./admin_auth.py:283:            session['username'] = test_user['username']
./admin_auth.py:284:            session['user_role'] = test_user['role']
./admin_routes.py:542:        session['csrf_token'] = csrf_token
./translation/context_manager.py:42:        session["translation_context"] = {
./security/session_security.py:31:            session[key] = value
./security/session_security.py:39:            session['session_created'] = time.time()
./security/session_security.py:43:        if time.time() - session['session_created'] > 3600:
./security/protection.py:22:        session['csrf_token'] = secrets.token_urlsafe(32)
./security/protection.py:23:    return session['csrf_token']
./auth_routes.py:359:                session['logged_in'] = True
./auth_routes.py:360:                session['username'] = user_info['username']
./auth_routes.py:361:                session['user_role'] = user_info['account_type']
./auth_routes.py:362:                session['daily_limit'] = USERS.get(login_identifier, {}).get('daily_limit', 10) if login_identifier in USERS else 10
./auth_routes.py:373:                            session['preferred_lang'] = preferred_lang
./auth_routes.py:374:                            session['lang'] = preferred_lang
./auth_routes.py:397:                session['authenticated'] = True
./auth_routes.py:398:                session['user_id'] = user_info['id']
./auth_routes.py:399:                session['username'] = user_info['username']
./auth_routes.py:400:                session['session_token'] = session_info['session_token']
./auth_routes.py:401:                session['session_id'] = session_info['session_id']
./auth_routes.py:402:                session['account_type'] = user_info['account_type']
./auth_routes.py:403:                session['early_access'] = user_info['early_access']
./auth_routes.py:490:                            session['preferred_lang'] = file_lang
./auth_routes.py:491:                            session['lang'] = file_lang
./auth_routes.py:521:                session['usage_count'] = 0
./auth_routes.py:522:                session['last_usage_date'] = today
./auth_routes.py:640:            session['preferred_lang'] = preferred_lang
./auth_routes.py:641:            session['lang'] = preferred_lang  # メインアプリの言語設定も更新
./auth_routes.py:760:            session['lang'] = new_settings.display_language
./auth_routes.py:1362:                        session['avg_rating'] = round(avg_rating, 1)
./auth_routes.py:1416:                            session['bookmarked_count'] = current_bookmarks + 1
./auth_routes.py:1418:                            session['bookmarked_count'] = max(0, current_bookmarks - 1)
./app.py:482:                            session['lang'] = preferred_lang
./app.py:483:                            session['preferred_lang'] = preferred_lang
./app.py:698:        session['usage_count'] = new_count
./app.py:699:        session['last_usage_date'] = today
./app.py:1018:        session[key] = truncated_value
./app.py:1025:        session[key] = value
./app.py:1714:                    session["logged_in"] = True
./app.py:1715:                    session["username"] = authenticated_user["username"]
./app.py:1716:                    session["user_role"] = authenticated_user["role"]
./app.py:1717:                    session["daily_limit"] = authenticated_user["daily_limit"]
./app.py:1971:                preserved_data[key] = session[key]
./app.py:1974:        session["lang"] = lang
./app.py:1976:        session["temp_lang_override"] = True
./app.py:1980:            session[key] = value
./app.py:2000:        session["lang"] = "jp"
./app.py:2009:            del session['temp_lang_override']
./app.py:2021:        session["lang"] = "jp"
./app.py:2109:        session["source_lang"] = source_lang
./app.py:2110:        session["target_lang"] = target_lang
./app.py:2111:        session["language_pair"] = language_pair
./app.py:2112:        session["input_text"] = input_text
./app.py:2113:        session["partner_message"] = partner_message
./app.py:2114:        session["context_info"] = context_info
./app.py:2552:            session['analysis_engine'] = selected_engine
./app.py:2588:            session["gemini_3way_analysis"] = truncated_result
./app.py:2590:            session["gemini_3way_analysis"] = result
./app.py:2974:                preserved_data[key] = session[key]
./app.py:2981:            session[key] = value
./app.py:3517:        session['csrf_token'] = csrf_token
./app.py:3553:        session['csrf_token'] = csrf_token
./myenv/lib/python3.12/site-packages/flask/sansio/scaffold.py:471:                    g.user = db.session.get(session["user_id"])
./myenv/lib/python3.12/site-packages/flask/testing.py:146:                session['value'] = 42
./myenv/lib/python3.12/site-packages/flask/helpers.py:335:    session["_flashes"] = flashes
./myenv/lib/python3.12/site-packages/flask/views.py:157:                session["counter"] = session.get("counter", 0) + 1
./security_backup_B2-9_investigation/session_security.py:31:            session[key] = value
./security_backup_B2-9_investigation/session_security.py:39:            session['session_created'] = time.time()
./security_backup_B2-9_investigation/session_security.py:43:        if time.time() - session['session_created'] > 3600:
./security_backup_B2-9_investigation/protection.py:22:        session['csrf_token'] = secrets.token_urlsafe(32)
./security_backup_B2-9_investigation/protection.py:23:    return session['csrf_token']
./backup/old_langpont.py:372:        session["source_lang"] = source_lang
./backup/old_langpont.py:373:        session["target_lang"] = target_lang
./backup/old_langpont.py:374:        session["language_pair"] = language_pair
./backup/old_langpont.py:408:        session["input_text"] = input_text  # 元のテキストも保存
./backup/old_langpont.py:409:        session["translated_text"] = translated
./backup/old_langpont.py:410:        session["gemini_translation"] = gemini_translation
./backup/old_langpont.py:442:        session["source_lang"] = source_lang
./backup/old_langpont.py:443:        session["target_lang"] = target_lang
./backup/old_langpont.py:506:            session["gemini_translation"] = gemini_translation
./backup/old_langpont.py:510:        session["better_translation"] = improved
./backup/old_langpont.py:629:                session["logged_in"] = True
./backup/old_langpont.py:662:        session["gemini_3way_analysis"] = result
./backup/old_langpont.py:758:             session["chat_history"] = chat_history
./backup/old_langpont.py:788:    session["lang"] = lang
./routes/engine_management.py:72:            session["analysis_engine"] = engine
