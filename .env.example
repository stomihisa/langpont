# LangPont Environment Configuration
# Task#9-4AP-1Ph4S4-02: DSN固定とSecrets管理移行 対応版
# 
# セキュリティ原則:
# 1. 本番環境では AWS Secrets Manager/SSM を優先使用
# 2. DSN形式（DATABASE_URL/REDIS_URL）を第一優先で使用
# 3. TLS強制: PostgreSQL sslmode=require / Redis rediss://
# 4. 相対パス・ハードコードされた接続情報を完全撤廃

# ========================================
# 基本設定
# ========================================
ENVIRONMENT=development
# 選択肢: development | staging | production

# ========================================
# データベース接続設定 (DSN形式推奨)
# ========================================

# PRIMARY (推奨): DSN形式での接続設定
# PostgreSQL/RDS - sslmode=require必須（本番・検証環境）
DATABASE_URL=postgresql://langpont_dev:dev_password_123@localhost:5432/langpont_dev?sslmode=prefer
# 本番例: DATABASE_URL=postgresql://user:pass@rds-host:5432/langpont?sslmode=require

# Redis - rediss:// (TLS)必須（本番・検証環境）
REDIS_URL=rediss://localhost:6379/0
# 本番例: REDIS_URL=rediss://:password@elasticache-host:6379/0

# ========================================
# LEGACY (後方互換性のみ - 非推奨)
# ========================================
# 注意: 下記個別パラメータは後方互換のみ。DSN形式を優先使用してください。
# 
# # PostgreSQL 個別設定（非推奨 - DATABASE_URL を使用）
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_DB=langpont_dev
# POSTGRES_USER=langpont_dev
# POSTGRES_PASSWORD=dev_password_123
# 
# # Redis 個別設定（非推奨 - REDIS_URL を使用）
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=0

# ========================================
# SQLite設定 (移行期間中の互換性維持)
# ========================================
# SQLiteファイルの基準ディレクトリ（絶対パス必須）
SQLITE_BASE_PATH=/opt/langpont/data
# 開発環境: 未設定時に $PWD/.devdata を使用（絶対パス自動生成）

# ========================================
# AI API キー設定
# ========================================
OPENAI_API_KEY=your_openai_api_key_here
CLAUDE_API_KEY=your_claude_api_key_here
GEMINI_API_KEY=your_gemini_api_key_here

# ========================================
# Flask設定
# ========================================
FLASK_SECRET_KEY=your_very_secure_secret_key_here_change_this_in_production
FLASK_ENV=development
# 本番環境では production に変更

# ========================================
# セッション管理設定
# ========================================
USE_REDIS_SESSION=true
SESSION_TTL_SECONDS=3600
SESSION_COOKIE_NAME=langpont_session

# ========================================
# 認証設定
# ========================================
# 管理者アカウント（本番環境では AWS Secrets Manager で管理）
ADMIN_PASSWORD=admin_langpont_2025
DEVELOPER_PASSWORD=dev_langpont_456  
GUEST_PASSWORD=guest_basic_123

# 後方互換性
LEGACY_PASSWORD=linguru2025

CLIENT_ID_SALT=langpont_security_salt_2025

# ========================================
# 環境設定
# ========================================
PORT=8080

# ========================================
# AWS設定 (本番環境用)
# ========================================
# AWS認証は IAM Role または AWS CLI で設定
# AWS_REGION=us-east-1
# AWS_PROFILE=langpont-production

# ========================================
# 開発環境専用設定
# ========================================
# CSRF開発エンドポイント有効化フラグ
DEV_CSRF_ENDPOINT_ENABLED=true

# ========================================
# ログ設定
# ========================================
LOG_LEVEL=INFO
# 選択肢: DEBUG | INFO | WARNING | ERROR | CRITICAL

# アクセスログ出力先（- = stdout）
ACCESS_LOG=-

# エラーログ出力先（- = stderr）
ERROR_LOG=-

# ========================================
# レート制限設定
# ========================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# ========================================
# Gunicorn設定（本番環境）
# ========================================
# Gunicornワーカー数（CPU数 x 2 + 1 が推奨）
GUNICORN_WORKERS=4

# ========================================
# クラウドプラットフォーム設定
# ========================================
# Heroku
# HEROKU_APP_NAME=your_app_name

# Render
# RENDER_SERVICE_NAME=your_service_name

# AWS
# AWS_EXECUTION_ENV=AWS_ECS_FARGATE

# Vercel
# VERCEL=1

# ========================================
# セキュリティ注意事項
# ========================================
# 1. 本ファイルをコミットしないこと
# 2. 本番環境では機密情報を AWS Secrets Manager で管理
# 3. パスワードは十分に複雑なものを設定
# 4. 定期的なローテーションを実施